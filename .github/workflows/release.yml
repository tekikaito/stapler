name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
        # TODO: 
        # - x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install cross
        run: cargo install cross

      - name: Build for ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Rename binary
        # Nutze hier Shell-Variablen und setze die Env-Variable f체rs Upload
        run: |
          # OUT_NAME setzt du je nach Target
          OUT_NAME="stapler-${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}"
          echo "OUT_NAME=$OUT_NAME" >> $GITHUB_ENV
          
          # Umbennen des fertigen Builds
          mv target/${{ matrix.target }}/release/stapler* "$OUT_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUT_NAME }}
          path: ${{ env.OUT_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    # L채uft nur f체r Tags, die mit 'v' beginnen
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          # L채dt alle hochgeladenen Artefakte herunter
          path: dist

      - name: List artifacts
        run: ls -R dist

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            This release was automatically generated by GitHub Actions.
          files: dist/*
          fail_on_unmatched_files: true
